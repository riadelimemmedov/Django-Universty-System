# Generated by Django 3.2 on 2023-02-19 04:57

import ckeditor.fields
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('school', '__first__'),
        ('core', '__first__'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('author_name', models.CharField(db_index=True, max_length=50, unique=True, verbose_name='name')),
                ('author_surname', models.CharField(max_length=50, verbose_name='surname')),
                ('author_slug', models.SlugField(blank=True, unique=True, verbose_name='author_slug')),
                ('description', ckeditor.fields.RichTextField(blank=True, null=True, verbose_name='description')),
                ('birth_date', models.DateField(blank=True, null=True, verbose_name='birthdate')),
                ('died_date', models.DateField(blank=True, null=True, verbose_name='died_date')),
            ],
            options={
                'verbose_name': 'Author',
                'verbose_name_plural': 'Authors',
            },
        ),
        migrations.CreateModel(
            name='Book',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('book_id', models.CharField(blank=True, db_index=True, max_length=50, null=True, unique=True, verbose_name='book id')),
                ('language', models.CharField(choices=[('af', 'Afrikaans'), ('sq', 'Albanian'), ('am', 'Amharic'), ('ar', 'Arabic'), ('az', 'Azerbaijani'), ('eu', 'Basque'), ('be', 'Belarusian'), ('bn', 'Bengali'), ('bs', 'Bosnian'), ('bg', 'Bulgarian'), ('ca', 'Catalan'), ('ceb', 'Cebuano'), ('ny', 'Chichewa'), ('co', 'Corsican'), ('hr', 'Croatian'), ('cs', 'Czech'), ('da', 'Danish'), ('nl', 'Dutch'), ('eng', 'English'), ('eo', 'Esperanto'), ('et', 'Estonian'), ('tl', 'Filipino'), ('fi', 'Finnish'), ('fr', 'French'), ('fy', 'Frisian'), ('gl', 'Galician'), ('ka', 'Georgian'), ('de', 'German'), ('el', 'Greek'), ('gu', 'Gujarati'), ('hi', 'Hindi'), ('hu', 'Hungarian'), ('id', 'Indonesian'), ('ga', 'Irish'), ('it', 'Italian'), ('ja', 'Japanese'), ('kn', 'Canada'), ('kk', 'Kazakh'), ('ko', 'Korean'), ('la', 'Latin'), ('lv', 'Latvian'), ('mk', 'Macedonian'), ('pt', 'Portuguese'), ('ro', 'Romanian'), ('ru', 'Russian'), ('es', 'Spanish'), ('sv', 'Swedish'), ('tr', 'Turkish'), ('uk', 'Ukrainian'), ('uz', 'Uzbek'), ('vi', 'Vietnamese'), ('cy', 'Welsh')], max_length=50, verbose_name='language')),
                ('book_title', models.CharField(max_length=50, verbose_name='book title')),
                ('summary', models.TextField(blank=True, help_text='Summary about the book', max_length=500, null=True, verbose_name='summary')),
                ('book_pages', models.PositiveIntegerField(default=0)),
                ('book_slug', models.SlugField(blank=True, unique=True, verbose_name='book slug')),
                ('book_image', models.ImageField(upload_to='book/', validators=[django.core.validators.FileExtensionValidator(['png', 'jpg', 'jpeg'])], verbose_name='book image')),
                ('book_type', models.CharField(choices=[('book_type', 'Book Type'), ('journal_type', 'Journal Type'), ('cartoon_herous_type', 'Cartoon Hereous Type')], max_length=50, verbose_name='book_type')),
                ('in_stock', models.BooleanField(default=False, verbose_name='in_stock')),
                ('available_copies', models.IntegerField(default=0, verbose_name='available_copies')),
                ('batch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='school.batch')),
                ('book_author', models.ManyToManyField(related_name='bookauthor', to='library.Author')),
            ],
            options={
                'verbose_name': 'Book',
                'verbose_name_plural': 'Books',
            },
        ),
        migrations.CreateModel(
            name='CategoryBook',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category_book_name', models.CharField(db_index=True, help_text='Enter a book genre (e.g. Science Fiction, French Poetry etc.)', max_length=50, unique=True, verbose_name='category book name')),
                ('category_book_slug', models.SlugField(blank=True, unique=True, verbose_name='category book slug')),
            ],
            options={
                'verbose_name': 'Category Book',
                'verbose_name_plural': 'Categoryies Book',
            },
        ),
        migrations.CreateModel(
            name='UniverstyLibrary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('library_name', models.CharField(max_length=50, verbose_name='library name')),
                ('libraryid', models.CharField(blank=True, db_index=True, max_length=50, null=True, unique=True, verbose_name='ddd')),
                ('book', models.ManyToManyField(related_name='book', to='library.Book')),
                ('librarian', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='librarian_library', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Library',
                'verbose_name_plural': 'libraries',
            },
        ),
        migrations.AddField(
            model_name='book',
            name='category',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='category_book', to='library.categorybook'),
        ),
        migrations.AddField(
            model_name='book',
            name='department',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='department_book', to='core.department'),
        ),
    ]
