# Generated by Django 4.0 on 2023-02-04 04:25

import django.core.validators
from django.db import migrations, models
import django_extensions.db.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AcademicSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('year', models.PositiveIntegerField(unique=True, verbose_name='academic session year')),
            ],
            options={
                'verbose_name': 'Academic Session',
                'verbose_name_plural': 'Academic Sessions',
            },
        ),
        migrations.CreateModel(
            name='Awards',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('awards_name', models.CharField(max_length=100, verbose_name='awards name')),
            ],
            options={
                'verbose_name': 'Award',
                'verbose_name_plural': 'Awards',
            },
        ),
        migrations.CreateModel(
            name='Batch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('number', models.PositiveIntegerField(verbose_name='batch number')),
                ('faculty_name', models.CharField(max_length=100, verbose_name='faculty name')),
            ],
            options={
                'verbose_name_plural': 'Batches',
            },
        ),
        migrations.CreateModel(
            name='Lesson',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lesson_name', models.CharField(help_text='Name contains only a-z and A-Z characters', max_length=50, validators=[django.core.validators.RegexValidator(message='Name contains only a-z and A-Z characters', regex="[a-zA-Z\\s']+")], verbose_name='lesson name')),
                ('lesson_code', django_extensions.db.fields.RandomCharField(blank=True, editable=False, include_alpha=False, length=12, unique=True, verbose_name='code')),
            ],
            options={
                'verbose_name': 'Lesson',
                'verbose_name_plural': 'Lessons',
            },
        ),
        migrations.CreateModel(
            name='Revenue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name': 'Revenue',
                'verbose_name_plural': 'Revenues',
            },
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject_name', models.CharField(db_index=True, help_text='Name contains only a-z and A-Z characters', max_length=50, unique=True, validators=[django.core.validators.RegexValidator(message='Name contains only a-z and A-Z characters', regex="[a-zA-Z\\s']+")], verbose_name='subject name')),
                ('subject_number', models.PositiveIntegerField(db_index=True, verbose_name='subject number')),
                ('theory_marks', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0, 0), django.core.validators.MaxValueValidator(10.0)], verbose_name='theory marks')),
                ('practical_marks', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0, 0), django.core.validators.MaxValueValidator(10.0)], verbose_name='practical marks')),
            ],
            options={
                'verbose_name': 'Subject',
                'verbose_name_plural': 'Subjects',
                'ordering': ['-subject_number'],
            },
        ),
        migrations.CreateModel(
            name='Semester',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('number', models.PositiveIntegerField(unique=True, verbose_name='semester number')),
                ('total_hours', models.PositiveIntegerField(default=0, verbose_name='total hours')),
                ('lessons', models.ManyToManyField(related_name='semester_lessons', to='school.Lesson')),
            ],
            options={
                'ordering': ['number'],
            },
        ),
    ]
